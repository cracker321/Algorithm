# [ 구현 implementation ]


# [ 이코테 - 상하좌우 ]
'''
문제
: 여행가 A는 N x N 크기의 정사각형 공간 위에 서 있다. 이 공간은 1 x 1 크기의 정사각형으로 나누어져 있다. 가장 왼쪽 위 좌표는 (1, 1)이며, 
가장 오른쪽 아래 좌표는 (N, N)에 해당한다. 여행가 A는 상, 하, 좌, 우 방향으로 이동할 수 있으며, 시작 좌표는 항상 (1, 1)이다. 
우리 앞에는 여행가 A가 이동할 계획이 적힌 계획서가 놓여있다.
계획서에는 하나의 줄에 띄어쓰기를 기준으로 하여 L, R, U, D 중 하나의 문자가 반복적으로 적혀있다. 각 문자의 의미는 다음과 같다.

L : 왼쪽으로 한 칸 이동
R : 오른쪽으로 한 칸 이동
U : 위로 한 칸 이동
D : 아래로 한 칸 이동

이때 여행가 A가 N x N 크기의 정사각형 공간을 벗어나는 움직임은 무시된다.
계획서가 주어졌을 때 여행가 A가 최종적으로 도착할 지점의 좌표를 출력하는 프로그램을 작성하시오


입력
: 첫째 줄에 공간의 크기를 나타내는 N이 주어진다. (1 <= N <= 100)
둘째 줄에 여행가 A가 이동할 계획서 내용이 주어진다.
(1 <= 이동 횟수 <= 100)


출력
:첫째 줄에 여행가 A가 최종적으로 도착할 지점의 좌표(X, Y)를 공백으로 구분하여 출력한다.
'''

# 1.< '정사각형의 격자의 크기'를 입력 받음 >
N = int(input()) 


# 2.< '여행 계획서('L, L, R, R ..' 와 같은 것)'를 문자열로 입력 받음 > 
plans = input() # 'input()'과 'str(input())'은 사실상 동일하다!


# 3.< 여행가의 시작 위치를 초기화함 >
x, y = 1, 1 # (1, 1)에서 시작하는 것으로 초기설정함. 
            # '파이썬의 다중할당' 기능이다!
            
            
# 4.< '여행 계획서'를 처리하는 단계 >
for plan in plans: # '여행 계획서 plans'의 문자열들을 하나씩 순회함. 
                   # 각 문자에 따라 해당하는 이동을 수행함.
    if plan == 'L': # 만약, 입력된 현재 계획 문자열이 L 이라면,
        x -= 1 # 왼쪽으로 이동하기 위해 x좌표를 1만큼 감소시킴
    elif plan == 'R':
        x += 1
    elif plan == 'D':
        y -= 1
    elif plan == 'U':
        y = 1

# 5.< 새롭게 이동한 위치가 양수 x, 양수 y의 정사각형 격차 범위 내 있는지 확인 >
    if x < 1: # 만약 새롭게 이동한 x 좌표가 1보다 작다면,
        x = 1 # x = 1 로 설정하여 새로운 x 좌표를 1로 고정함. 즉, 격자의 좌측 벽에 닿았을 때는, 최소 좌표인 1로 고정시킴.
    elif x > N:
        x = N # x = N으로 설정하여 새로운 x 좌표를 N으로 고정함. 즉, 격자의 우측 벽에 닿았을 때는, 최대 좌표인 N으로 고정시킴.
    elif y < 1:
        y = 1 
    elif y > N:
        y = N


# 6.< 여행자의 최종 위치 출력 >
print(x, y)


